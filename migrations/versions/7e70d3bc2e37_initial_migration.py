"""Initial migration

Revision ID: 7e70d3bc2e37
Revises: 
Create Date: 2025-03-11 18:49:44.237699

"""
from alembic import op
import sqlalchemy as sa
from datetime import datetime
from werkzeug.security import generate_password_hash


# revision identifiers, used by Alembic.
revision = '7e70d3bc2e37'
down_revision = None
branch_labels = None
depends_on = None

users_table = sa.table(
    "users",
    sa.column("username", sa.String),
    sa.column("password_hash", sa.String),
    sa.column("created", sa.DateTime),
    sa.column("is_active", sa.Boolean),
)

default_user = dict(
    username="admin",
    password_hash=generate_password_hash("alex414alex"),
    created=datetime.now(),
    is_active=True,
)

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('devices',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('last_seen', sa.DateTime(), nullable=True),
    sa.Column('monobank_api_key', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('ack_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('message_type', sa.String(length=20), nullable=False),
    sa.Column('code', sa.Integer(), nullable=True),
    sa.Column('message', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('collections',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('coin_1', sa.Integer(), nullable=True),
    sa.Column('coin_2', sa.Integer(), nullable=True),
    sa.Column('coin_3', sa.Integer(), nullable=True),
    sa.Column('coin_4', sa.Integer(), nullable=True),
    sa.Column('coin_5', sa.Integer(), nullable=True),
    sa.Column('coin_6', sa.Integer(), nullable=True),
    sa.Column('bill_1', sa.Integer(), nullable=True),
    sa.Column('bill_2', sa.Integer(), nullable=True),
    sa.Column('bill_3', sa.Integer(), nullable=True),
    sa.Column('bill_4', sa.Integer(), nullable=True),
    sa.Column('bill_5', sa.Integer(), nullable=True),
    sa.Column('bill_6', sa.Integer(), nullable=True),
    sa.Column('bill_7', sa.Integer(), nullable=True),
    sa.Column('bill_8', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('ack_sent', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_configs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('wifi_sta_ssid', sa.String(length=100), nullable=True),
    sa.Column('wifi_sta_pass', sa.String(length=100), nullable=True),
    sa.Column('ntp_server', sa.String(length=100), nullable=True),
    sa.Column('time_zone', sa.Integer(), nullable=True),
    sa.Column('broker_uri', sa.String(length=100), nullable=True),
    sa.Column('broker_port', sa.Integer(), nullable=True),
    sa.Column('broker_user', sa.String(length=100), nullable=True),
    sa.Column('broker_pass', sa.String(length=100), nullable=True),
    sa.Column('ota_server', sa.String(length=100), nullable=True),
    sa.Column('ota_port', sa.Integer(), nullable=True),
    sa.Column('bill_table_json', sa.Text(), nullable=True),
    sa.Column('coin_table_json', sa.Text(), nullable=True),
    sa.Column('coin_validator_type', sa.String(length=20), nullable=True),
    sa.Column('coin_pulse_price', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('request_id', sa.Integer(), nullable=True),
    sa.Column('max_payment', sa.Integer(), nullable=True),
    sa.Column('min_pay_pass', sa.Integer(), nullable=True),
    sa.Column('max_pay_pass', sa.Integer(), nullable=True),
    sa.Column('delta_pay_pass', sa.Integer(), nullable=True),
    sa.Column('tariff_per_liter_1', sa.Integer(), nullable=True),
    sa.Column('tariff_per_liter_2', sa.Integer(), nullable=True),
    sa.Column('pulses_per_liter_1', sa.Integer(), nullable=True),
    sa.Column('pulses_per_liter_2', sa.Integer(), nullable=True),
    sa.Column('pulses_per_liter_3', sa.Integer(), nullable=True),
    sa.Column('time_one_pay', sa.Integer(), nullable=True),
    sa.Column('liters_in_full_tank', sa.Integer(), nullable=True),
    sa.Column('time_servis_mode', sa.Integer(), nullable=True),
    sa.Column('spill_timer', sa.Integer(), nullable=True),
    sa.Column('spill_amount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('device_states',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('operating_mode', sa.String(length=50), nullable=True),
    sa.Column('summa_in_box', sa.Integer(), nullable=True),
    sa.Column('liters_in_tank', sa.Integer(), nullable=True),
    sa.Column('tank_low_level_sensor', sa.Boolean(), nullable=True),
    sa.Column('tank_high_level_sensor', sa.Boolean(), nullable=True),
    sa.Column('deposit_box_sensor', sa.Boolean(), nullable=True),
    sa.Column('door_sensor', sa.Boolean(), nullable=True),
    sa.Column('coin_state', sa.String(length=50), nullable=True),
    sa.Column('bill_state', sa.String(length=50), nullable=True),
    sa.Column('errors_json', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('display_info',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('line_1', sa.String(length=255), nullable=True),
    sa.Column('line_2', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('payment_type', sa.String(length=20), nullable=False),
    sa.Column('order_id', sa.String(length=50), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('monobank_invoice_id', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('device_id', sa.String(length=50), nullable=False),
    sa.Column('external_id', sa.Integer(), nullable=True),
    sa.Column('created', sa.DateTime(), nullable=True),
    sa.Column('add_coin', sa.Integer(), nullable=True),
    sa.Column('add_bill', sa.Integer(), nullable=True),
    sa.Column('add_prev', sa.Integer(), nullable=True),
    sa.Column('add_free', sa.Integer(), nullable=True),
    sa.Column('add_qr', sa.Integer(), nullable=True),
    sa.Column('add_pp', sa.Integer(), nullable=True),
    sa.Column('out_liters_1', sa.Integer(), nullable=True),
    sa.Column('out_liters_2', sa.Integer(), nullable=True),
    sa.Column('sale_type', sa.String(length=20), nullable=True),
    sa.Column('card_code', sa.String(length=20), nullable=True),
    sa.Column('card_balance_in', sa.Integer(), nullable=True),
    sa.Column('card_balance_out', sa.Integer(), nullable=True),
    sa.Column('ack_sent', sa.Boolean(), nullable=True),
    sa.Column('payment_source', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    
    # Додаємо користувача адміністратора
    conn = op.get_bind()
    conn.execute(
        users_table.insert().values([default_user])
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sales')
    op.drop_table('payments')
    op.drop_table('display_info')
    op.drop_table('device_states')
    op.drop_table('device_settings')
    op.drop_table('device_configs')
    op.drop_table('collections')
    op.drop_table('ack_messages')
    op.drop_table('users')
    op.drop_table('devices')
    # ### end Alembic commands ###
